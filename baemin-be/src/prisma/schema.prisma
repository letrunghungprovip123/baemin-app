generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model delivery {
  delivery_id      Int       @id @default(autoincrement())
  order_id         Int?
  driver_id        Int?
  status           String?   @db.VarChar(50)
  delivery_address String?
  delivery_time    DateTime? @db.Timestamp(6)
  created_at       DateTime? @default(now()) @db.Timestamp(6)
  users            users?    @relation(fields: [driver_id], references: [user_id], onDelete: NoAction, onUpdate: NoAction)
  orders           orders?   @relation(fields: [order_id], references: [order_id], onDelete: NoAction, onUpdate: NoAction)
}

model menus {
  menu_id       Int           @id @default(autoincrement())
  restaurant_id Int?
  name          String        @db.VarChar(100)
  description   String?
  price         Decimal       @db.Decimal(10, 2)
  created_at    DateTime?     @default(now()) @db.Timestamp(6)
  restaurants   restaurants?  @relation(fields: [restaurant_id], references: [restaurant_id], onDelete: NoAction, onUpdate: NoAction)
  order_items   order_items[]
}

model order_items {
  order_item_id Int     @id @default(autoincrement())
  order_id      Int?
  menu_id       Int?
  quantity      Int
  total_price   Decimal @db.Decimal(10, 2)
  menus         menus?  @relation(fields: [menu_id], references: [menu_id], onDelete: NoAction, onUpdate: NoAction)
  orders        orders? @relation(fields: [order_id], references: [order_id], onDelete: NoAction, onUpdate: NoAction)
}

model orders {
  order_id      Int           @id @default(autoincrement())
  user_id       Int?
  restaurant_id Int?
  total_price   Decimal       @db.Decimal(10, 2)
  status        String?       @db.VarChar(50)
  created_at    DateTime?     @default(now()) @db.Timestamp(6)
  delivery      delivery[]
  order_items   order_items[]
  restaurants   restaurants?  @relation(fields: [restaurant_id], references: [restaurant_id], onDelete: NoAction, onUpdate: NoAction)
  users         users?        @relation(fields: [user_id], references: [user_id], onDelete: NoAction, onUpdate: NoAction)
  payments      payments[]
}

model payments {
  payment_id     Int       @id @default(autoincrement())
  order_id       Int?
  amount         Decimal   @db.Decimal(10, 2)
  payment_method String?   @db.VarChar(50)
  payment_status String?   @db.VarChar(50)
  payment_time   DateTime? @default(now()) @db.Timestamp(6)
  orders         orders?   @relation(fields: [order_id], references: [order_id], onDelete: NoAction, onUpdate: NoAction)
}

model restaurants {
  restaurant_id Int       @id @default(autoincrement())
  name          String    @db.VarChar(100)
  address       String?
  phone         String?   @db.VarChar(15)
  owner_id      Int?
  created_at    DateTime? @default(now()) @db.Timestamp(6)
  is_partner    Boolean?
  menus         menus[]
  orders        orders[]
  users         users?    @relation(fields: [owner_id], references: [user_id], onDelete: NoAction, onUpdate: NoAction)
}

model users {
  user_id       Int           @id @default(autoincrement())
  name          String        @db.VarChar(100)
  email         String?       @unique @db.VarChar(100)
  phone         String?       @db.VarChar(15)
  password_hash String?       @db.VarChar(255)
  role          String?       @db.VarChar(50)
  address       String?
  created_at    DateTime?     @default(now()) @db.Timestamp(6)
  delivery      delivery[]
  orders        orders[]
  restaurants   restaurants[]
}
